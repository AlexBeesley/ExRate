trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5d05a2ef-c74a-47da-898a-9520334170cb'
  imageRepository: 'exrate'
  containerRegistry: 'exrate.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image names
  vmImageLinux: 'ubuntu-latest'
  vmImageWindows: 'windows-latest'

stages:
- stage: Test_and_Build
  displayName: Build and test stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageWindows)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    - task: VSTest@2
      displayName: Test
      inputs:
        command: test
        projects: '**/**/*Tests/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --filter **\*Tests.dll'
        diagnosticsEnabled: true
  - stage: Test_and_Build
    displayName: Build and push stage
    jobs:
    - job: Docker_Build
      displayName: Build Docker Image
      pool:
        vmImage: $(vmImageLinux)
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(tag)

